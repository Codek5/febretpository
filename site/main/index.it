#include "../etc/febretpository.ih"
#include "../etc/header.html"

<$item "Welcome!" img="../images/me2.jpg" imgwidth="500">
	<p><b>Welcome!</b> I'm Alessandro Febretti. I'm a Research Assistant and Ph.D. Student at the <a href="evl.uic.edu">Electronic Visualization Lab</a> of the University of Illinois at Chicago.</p>
	
	<p>This website is a repository of all the projects I'm currently working on or I did in the past, together with my publications, class projects, presentations and stuff I do for fun.</p>
	
	<p>I'm into <b>Virtual Reality and Immersive Systems, Human Computer Interaction, Scientific and Information Visualization, Tiled Display Systems, GPU Programming and Videogame Design.</b></p>
<$end-item>

<$section "Current Projects">
	<$item title="CAVE2 (October 2012 - Present)" img="../images/cave2.jpg">
		CAVE2, the next-generation large-scale virtual-reality environment, is a hybrid system that combines the benefits of both scalable-resolution display walls and virtual-reality systems to create a seamless 2D/3D environment that supports both information-rich analysis as well as virtual-reality simulation exploration at a resolution matching human visual acuity.
        <p><b>Links:</b><ul>
			<li><a href="http://www.evl.uic.edu/core.php?mod=4&type=1&indi=424">CAVE2 EVL page</a></li>
		</ul></p>
	<$end-item>
	
	<$item title="Porthole (January 2013 - Present)" img="../images/porthole.jpg" imgwidth="250">
		<p>
		Porthole is a framework that helps Virtual Environment applications developers to generate decoupled HTML5 interfaces. The goal is to ease the interaction between VE systems and smartphones, tablets, laptops or desktop computers, without the need of ad-hoc client applications. For instance, CAVE2 developers now can use handheld devices to interact and manage their VE applications, just by providing a XML Interfaces Description (XID) File (and, optionally, a Cascading Style Sheets (CSS) File for changing client interface style). Clients can connect to CAVE2 using an HTML5 enabled browser, receive a tailored Graphical User Interface, and manage VE application cameras and parameters. Connection, messaging and streaming management is, hence, transparent to VE applications developers.
		</p>

		<p>
		Porthole addresses earlier work limitations by proposing a novel Human-Computer Interaction (HCI) model that exploits browsers as a mean of interaction with VE systems. State of art works, instead, present application or Operating System (OS) specific solutions. Moreover, Porthole suggests a new concept of remote collaboration, with respect to Collaborative Virtual Environments (CVEs) model proposed in earlier work in this area.
		</p>	
	<$end-item>
	
	<$item title="HANDS (January 2012 - Present)" img="../images/HANDS.png">
		<p>The Hands-on Automated Nursing Data System (HANDS) is a standardized plan of care method in which the patient's plan is updated at every nurse hand-off allowing the interdisciplinary team to track the story about care and progress toward desired outcomes in a standardized format across time and units.</p>
		<p>
		EVL is collaborating with UIC's College of Nursing and College of Engineering on the visual component of the HANDS system. Current goals include: - improving the original HANDS user interface for more potential users such as doctors and therapists. - investigating and understanding the needs of prospective users, and adding additional functionality to HANDS to address the needs of those users. - adding visualization to HANDS existing reports in an effort to empower current and future users to do more data exploration and visual analytics.
		</p>
	<$end-item>
	
	<$item title="Omegalib and the Omicron SDK" img="../images/omegalib-white.png">
		<p>
			<b>omegalib</b> is a runtime environment and application toolkit for tiled displays and immersive and hybrid reality systems. Its main features are: support for cluster rendering; display system scalability; seamless integration with a wide range of input peripherals; support for third-party high-level toolkits, such as VTK and Open Scene Graph. Omegalib applications can be developed in <b>C++ or Python</b>, and can run on heterogeneous systems, from a laptop, to the <a href="http://www.evl.uic.edu/core.php?mod=4&type=1&indi=416">OmegaDesk</a> to <a href="http://www.evl.uic.edu/core.php?mod=4&type=1&indi=424">CAVE2</a>.
		</p>
		<p>
			<b>The omicron SDK</b> is a library providing access to a variety of input devices, mostly used in immersive installations and stereo display systems. Some of the devices currently supported by omicron are:
			<ul>
				<li>All motion capture systems supporting the VRPN protocol</li>
				<li>NaturalPoint trackers (TrackIR, Optitrack)</li>
				<li>Game controllers (Wii, XBox360, PS3)</li>
				<li>Microsoft Kinect (multiple Kinects supported. omicron also offers some functions for Multi-kinect transform calibration)</li>
				<li>SAGE pointer connections</li>
				<li>PQLabs multitouch overlays</li>
				<li>Thinkgear brainwave interfaces</li>
			</ul>
			omicron abstracts input using modular event services, each providing access to a specific input device. Events can be easily streamed over the network using the omicron connector API. Also, Event services can be chained together to provide advanced functionality. In addition to event services, omicron provides additional utility APIs to simplify the developement of the non-graphics part of VR applications.
		</p>
        <p><b>Links:</b><ul>
			<li><a href="https://github.com/uic-evl/omegalib">Omegalib on Github</a></li>
			<li><a href="https://github.com/uic-evl/omicron">Omicron SDK on Github
		</ul></p>
	<$end-item>
    
    <a href="pastProjects.shtml"> See Past Projects Here</a>
<$end-section>

#include "../etc/footer.html"
